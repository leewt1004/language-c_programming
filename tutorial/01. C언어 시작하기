# 01.C언어 시작하기

## ch01_C언어 시작하기

### Ex01_C언어 시작하기.c
/*
1. c언어는 함수를 만드는 언어이다.
   함수를 여러개 만들어서 하나의 프로그래밍 언어를 만드는 언어가 c언어이다.

2. main()함수
    - c언어에서 반드시 필요한 함수는 main()함수이다.
    - c언어에서 반드시 필요한 함수이다.
    - main함수는 한개만 존재해야 한다. 시스템이 프로그램을 실행할 때 가장 먼저 찾아가는 함수가 main이며, main함수가 두 개면 시스템에서 어디를 찾아가야 하는지 모르기 때문에 에러가 발생한다.
    - main()함수가 없으면 처음 시작하는 함수가 없게 되므로 에러가 발생한다.
    - 하나의 프로젝트 안에 main()함수는 하나만 존재해야 한다.

3. 함수
    - input에 따라 ouput이 달라진다.
    - 함수에는 무조건 input과 output이 있어야 한다.
    - main()함수에서는 ()안에 input. 즉, 입력에 해당하는 것을 넣어줘야 하며, 입력이 없이 함수를 만든다는 의미에서 void라는 키워드를 사용한다.(void는 생략 가능)

4. {} 중괄호
    - main(void)함수의 시작과 끝을 의미한다.

5. main(void){}
    - 입력이 없는 상태로 main()함수를 만다는데 "{ 여기서 부터 } 여기까지 수행할거다" 라는 의미를 가진다.

6. return 0;
    - main()함수의 output. 즉 출력값은 0이다.
    - 0은 정수의 값이다.
    - ANSI C의 표준안에 의거 0으로 표기하는 것을 권장한다.
    - 출력해서 내보내는 값이 정수이다.
    - 모든 명령의 끝에 세미콜론; 을 사용해야 하며, 생략 시 에러가 발생한다.

7. int
    - integer 정수라는 뜻의 약자이며, 출력하는 값이 타입이 int이다.

8. compile
    - 인간이 만든 코드를 기계어러 번역해 주는 역할을 하며 compile역할을 해주는 툴을 compiler라고 한다.
    - 다양한 툴 중에 visual studio 2022를 사용한다.

9. obj
    - 인간이 만든 .c 파일을 기계어로 변환하는데 그 파일을 obj file(object) 이라고 한다.

10. 헤더파일
    - c언어에서 제공하는 함수를 사용하게 되면 반드시 헤더파일을 추가해야 한다.
    - #include<stdio.h>

11. 실행파일
    - compile은 단순히 코드를 기계어러 번역하는 작업이므로, 실행가능한 상태로 만들어서 실행파일을 만드는 작업이 필요하게 된다.
    - linking작업을 통해서 작업을 해야 하나 vs2022는 linking작업이 따로 없으며, compile과 linking을 하나로 합쳐서 build라는 명령이 존재한다.
    - 빌드 -> 솔루션빌드
    - 기계가 알아들을 수 있는 파일에서 실행가능한 파일까지 만들어진 상태이며 실행만 하면된다. (빌드 -> 디버그하지 않고 시작_ctrl + F5 단축키 사용)
    - 실행 시 항상 빌드 후 실행
    - 단축키 변경 : 도구 -> 옵션 -> 환경 -> 키보드 -> 다음 문자열을 포함하는 명령표시(C) : 빌드.솔 -> 빌드.솔루션빌드 -> 기존 단축키 제거 후 필요 단축키 (F7) 할당 및 확인

12. Escape Sequence
    - 무조건 역슬러쉬(\)로 시작한다.
    - 줄바꿈 : \n (n은 newline)
    - Tab : \t 
        * 콘솔창에서는 한 줄에 80글자가 들어가고, 8칸 간격으로 10구간으로 나누어져 있다.
        * 영어/숫자는 80글자, 한글은 40글자가 허용된다.
        * 현재 위치에서 가장 가까운 8칸 위치로 이동한다. 즉, 최소 1칸에서 최대 8칸 까지 이동할 수 있다.
*/


#include<stdio.h> //헤더파일

int main(void) // 정수타입의 int, main()함수, void키워드 사용
{
    //Escape Sequence 사용 : 줄바꿈 및 Tab
	printf("Hello\n Wo\n\nrld\n");
	printf("사과\t배\t귤\n"); 
	printf("apple\tpear\torange\n");

	return 0; //main()함수의 output
} 



### Ex02_판매결과.c

#include<stdio.h>

int main(void)
{
	printf("\t**판매 결과 **\n");
	printf("====================================\n");
	printf("품목\t서울\t대전\t대구\t부산\n");
	printf("------------------------------------\n");
	printf("사과\t70\t80\t100\t400\n");
	printf("귤\t3200\t350\t45\t75\n");
	printf("배\t120\t780\t130\t99\n");
	printf("------------------------------------\n");
	return 0;
}



### Ex03_알파벳.c

#include<stdio.h>

int main(void)
{
	printf("\t\tA\n");
	printf("\tB\t\tC\n");
	printf("D\t\tE\t\tF\n");
	printf("\tG\t\tH\n");
	printf("\t\tI\n");
	return 0;
}



### Ex04_주석.c
/*
1. Escape Sequence + 큰따옴표(\")
	- 큰따옴표를 문자열 안에 포함시키기 위해 사용된다.
	- 문자열을 구분하는 큰따옴표와 혼동죄지 않도록 도와준다.

2. 주석
	- // 설명문 : 주석처리가 되며, 한줄만 처리된다.
	- compiler는 보지 못하고 코딩자만 볼 수 있다.
	- 전체 문장은 현재와 같이 사용하면 전체 주석 처리가 된다. 
*/

#include<stdio.h>

int main(void)
{
	printf("아버지는 말씀 하셨지 \"인생을 즐겨라!\"\n"); // 큰따옴표 출력 시 \"로 표기
	printf("강아지는 \"멍멍\", 고양이는 \"야옹\"\n");
	return 0;
}


## ch02_자료형변수상수
